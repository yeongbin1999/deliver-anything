name: Auto PR Title from Issue

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

permissions:
  issues: read
  pull-requests: write

jobs:
  set-pr-title:
    runs-on: ubuntu-latest
    steps:
      - name: Set PR title same as issue title + number
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;

            // 1) Dependabot 등 봇 PR은 패스
            const botLogins = new Set(['dependabot[bot]']);
            if (botLogins.has(pr.user.login)) {
              console.log('ℹ️ Bot PR detected, skipping');
              return;
            }

            const branch = pr.head.ref; // ex) feat/be/123
            // 2) 우리 브랜치 컨벤션이 아니면 스킵(실수 방지)
            const branchOK = /^(feat|fix|refactor|docs|chore|test)\/(fe|be|infra)\/\d+$/.test(branch);
            if (!branchOK) {
              console.log(`ℹ️ Branch "${branch}" does not match our pattern; skipping`);
              return;
            }

            // 3) 브랜치에서 이슈 번호 추출 (마지막 세그먼트 숫자)
            const m = branch.match(/(?:\/|^)(\d+)$/);
            if (!m) {
              console.log(`❌ Could not extract issue number from "${branch}"`);
              return;
            }
            const issueNumber = Number(m[1]);

            // 4) 이슈 조회 (404면 스킵)
            let issue;
            try {
              issue = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber
              });
            } catch (error) {
              if (error.status === 404) {
                console.log(`❌ Issue #${issueNumber} not found; skipping`);
                return;
              }
              throw error;
            }

            const issueTitle = (issue.data.title || '').trim();
            if (!issueTitle) {
              console.log(`❌ Issue #${issueNumber} has empty title; skipping`);
              return;
            }

            // 5) PR 제목 동기화: "<이슈제목> (#번호)"
            const desiredTitle = `${issueTitle} (#${issueNumber})`;
            if (desiredTitle !== pr.title) {
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                title: desiredTitle
              });
              console.log(`✅ PR title updated → ${desiredTitle}`);
            } else {
              console.log('ℹ️ PR title already up-to-date');
            }

            // 6) (옵션) PR 본문에 이슈 링크 없으면 추가
            const body = pr.body || '';
            if (!new RegExp(`\\(#${issueNumber}\\)`).test(body) && !new RegExp(`#${issueNumber}(\\b|$)`).test(body)) {
              const appended = `${body}\n\nLinked: #${issueNumber}`.trim();
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                body: appended
              });
              console.log(`📝 Appended issue link to PR body`);
            }